version: '3.8'

services:
  # Django 애플리케이션 컨테이너 (Gunicorn을 통해 실행)
  web:
    build: ./backend
    # 컨테이너 시작 시 실행할 명령어입니다. Dockerfile의 CMD를 덮어씁니다.
    # 이렇게 하면 Dockerfile과 실행 명령어를 분리하여 더 유연하게 관리할 수 있습니다.
    command: gunicorn --bind 0.0.0.0:8000 ScholarMate_backend.wsgi
    # 로컬의 코드가 컨테이너와 동기화되도록 합니다. 개발 환경에 유용합니다.
    volumes:
      - ./backend:/app
    # 컨테이너 내부 포트를 외부에 노출합니다. nginx 컨테이너와 통신하기 위함입니다.
    expose:
      - 8000
    # 환경 변수 파일을 컨테이너에 주입합니다.
    env_file:
      - .env
    # web 컨테이너가 redis 컨테이너 이후에 시작되도록 합니다.
    depends_on:
      - redis

  # Nginx 컨테이너
  nginx:
    image: nginx:1.23-alpine
    # EC2 인스턴스의 80번 포트와 컨테이너의 80번 포트를 연결합니다.
    # 사용자들이 웹사이트에 접속할 수 있도록 외부에 노출되는 포트입니다.
    ports:
      - "80:80"
    # Nginx 설정 파일과 정적/미디어 파일들을 마운트합니다.
    volumes:
      # Nginx 설정 파일을 로컬에서 컨테이너로 연결합니다.
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      # Django의 static, media 파일들을 Nginx가 서빙할 수 있도록 연결합니다.
      - ./backend/staticfiles:/app/staticfiles
      - ./backend/mediafiles:/app/mediafiles
    # nginx 컨테이너가 web 컨테이너 이후에 시작되도록 합니다.
    depends_on:
      - web

  # Redis 컨테이너
  redis:
    image: redis:alpine
    expose:
      - 6379